server.servlet.context-path = /app


#--------------- profile configuration start ---------------#
spring.profiles.active = prod
#--------------- profile configuration end ---------------#


#--------------- dev configuration start ---------------#
spring.devtools.restart.additional-paths =
#--------------- dev configuration end ---------------#


#--------------- custom configuration start ---------------#
app.properties.test = default
app.properties.referenceTest = ${app.properties.test} 
# random
app.properties.testRandomString = ${random.value}
app.properties.testRandomInt = ${random.int(10)}   // < 10
app.properties.testRandomRange = ${random.int[10, 20]}  // 10 - 20
app.properties.testUUID = ${random.uuid}
#--------------- custom configuration end ---------------#


#--------------- log configuration start ---------------#
logging.config = classpath:envs/${spring.profiles.active}/log4j2.xml
#--------------- log configuration end ---------------#


#--------------- aop configuration start ---------------#
# Add @EnableAspectJAutoProxy. (添加aop starter后默认开启)
spring.aop.auto = true 
# Whether subclass-based (CGLIB) proxies are to be created (true) as opposed to standard Java interface-based proxies (false).
spring.aop.proxy-target-class = false 
#--------------- aop configuration start ---------------#


#--------------- thymeleaf configuration start---------------#
# Enable template caching.
spring.thymeleaf.cache = false 
# Enable MVC Thymeleaf view resolution.
spring.thymeleaf.enabled = true 
# Template encoding.
spring.thymeleaf.encoding = utf-8
# Template mode to be applied to templates. See also StandardTemplateModeHandlers.
spring.thymeleaf.mode = HTML5 
# Prefix that gets prepended to view names when building a URL.
# Prefix必须以/结尾，必须以classpath开头
spring.thymeleaf.prefix = classpath:templates/app/
# Suffix that gets appended to view names when building a URL.
spring.thymeleaf.suffix = .html
# Check that the templates location exists.
spring.thymeleaf.check-template-location = true 
# Content-Type value.
spring.thymeleaf.servlet.content-type = text/html 
# Comma-separated list of view names that can be resolved.
#spring.thymeleaf.view-names =
# Comma-separated list of view names that should be excluded from resolution.
#spring.thymeleaf.excluded-view-names =
# Order of the template resolver in the chain.
#spring.thymeleaf.template-resolver-order =
#--------------- thymeleaf configuration end ---------------#


#--------------- datasource configuration end ---------------#
spring.datasource.url = jdbc:mysql://localhost:3306/springboottryit?
spring.datasource.username = root
spring.datasource.password = 88863650qw
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver

spring.datasource.type = com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle = 5
spring.datasource.hikari.maximum-pool-size = 15
spring.datasource.hikari.auto-commit = true
spring.datasource.hikari.idle-timeout = 30000
spring.datasource.hikari.pool-name = DatebookHikariCP
spring.datasource.hikari.max-lifetime = 1800000
spring.datasource.hikari.connection-timeout = 30000
spring.datasource.hikari.connection-test-query = SELECT 1

# JNDI配置
#spring.datasource.jndi-name=java:jboss/datasources/customers
#--------------- datasource configuration end ---------------#

#--------------- jpa configuration start ---------------#
spring.jpa.properties.hibernate.hbm2ddl.auto = create-drop
spring.jpa.properties.hibernate.show_sql = true
#--------------- jpa configuration end ---------------#


#--------------- redis configuration start ---------------#
redis.mode = standalone
redis.config = classpath:envs/${spring.profiles.active}/redis.properties
#--------------- redis configuration end ---------------#


#--------------- standalone cache configuration start ---------------#
# 强制指定cache类型
spring.cache.type = ehcache
spring.cache.ehcache.config = classpath:ehcache.xml
#--------------- standalone configuration end ---------------#

#--------------- management configuration start ---------------#
management.endpoints.web.base-path = /management
# 指定jmx、web公开的端点，默认只暴露/health和/info
management.endpoints.jmx.exposure.include = *
management.endpoints.web.exposure.exclude =
management.endpoints.web.exposure.include = *
management.endpoint.shutdown.enabled = true 

# 开启details，显示health细节，默认不限制details
management.endpoint.health.show-details = always

management.endpoints.web.cors.allowed-origins = *
management.endpoints.web.cors.allowed-methods = GET, POST

# 指定自定义info
info.build.artifact = @project.artifactId@
info.build.name = @project.name@
info.build.description = @project.description@
info.build.version = @project.version@
#--------------- management configuration start ---------------#


#--------------- undertow configuration start ---------------#
# Number of I/O threads to create for the worker.
server.undertow.io-threads = 8
# Number of worker threads.
server.undertow.worker-threads = 16
# Whether servlet filters should be initialized on startup
# eager初始化可以提升运行时的速度
server.undertow.eager-filter-init = true
# Maximum size in bytes of the HTTP post content.（限制http post报文大小）
server.undertow.max-http-post-size = -1

# Enable access log.
server.undertow.accesslog.enabled = false 
# Undertow access log directory.
server.undertow.accesslog.dir = undertow/logs/
# Format pattern for access logs.
server.undertow.accesslog.pattern = common
# Log file name prefix.
server.undertow.accesslog.prefix = access_log. 
# Enable access log rotation. (? 没有指定如何rotate)
server.undertow.accesslog.rotate = true 
# Log file name suffix.
server.undertow.accesslog.suffix = log 

# Size of each buffer in bytes.
#server.undertow.buffer-size = 1024
# Allocate buffers outside the Java heap.
server.undertow.direct-buffers = true
#--------------- undertow configuration end ---------------#







